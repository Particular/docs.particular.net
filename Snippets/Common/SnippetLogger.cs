using System;
using System.IO;
using System.Runtime.CompilerServices;

namespace Common
{
    public class SnippetLogger :
        IDisposable
    {
        string outputFilePath;

        public SnippetLogger([CallerFilePath] string sourceFilePath = null, string suffix = "", string version = "")
        {
            var fileNameWithoutExtension = Path.GetFileNameWithoutExtension(sourceFilePath);
            outputFilePath = Path.Combine(Path.GetDirectoryName(sourceFilePath), $"{fileNameWithoutExtension}{suffix}.txt");
            File.Delete(outputFilePath);
            var key = fileNameWithoutExtension;
            var contents = $@"Snippet is code generated by {Path.GetFileName(sourceFilePath)}
start	code {key}{suffix} {version}
".Replace("\t", "");
            File.AppendAllText(outputFilePath, contents);
        }

        public static void Write(string text, [CallerFilePath] string sourceFilePath = null, string suffix = "", string version = "")
        {
            using (var logger = new SnippetLogger(sourceFilePath, suffix, version))
            {
                logger.WriteLine(text);
            }
        }

        public void WriteLine(string message)
        {
            message = $"{message}\r\n";
            File.AppendAllText(outputFilePath, message);
        }

        public void Dispose()
        {
            File.AppendAllText(outputFilePath, "endcode");
        }
    }
}